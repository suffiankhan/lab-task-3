#include <iostream>
using namespace std;
struct Node{int v; Node* next; Node(int x):v(x),next(nullptr){}};
Node* build(int a[], int n){ Node* h=nullptr; Node* t=nullptr; for(int i=0;i<n;i++){ Node* p=new Node(a[i]); if(!h) h=t=p; else { t->next=p; t=p; } } return h; }
void print(Node* h){ Node* p=h; while(p){ cout<<p->v; if(p->next) cout<<" "; p=p->next; } cout<<"\n"; }
void transform(Node* head){
    if(!head||!head->next) return;
    Node* odd=head;
    Node* even=head->next;
    Node* evenHead=even;
    while(odd && even){
        odd->next=even->next;
        odd = odd->next;
        if(odd) { even->next = odd->next; even = even->next; } else { even->next=nullptr; break; }
    }
    Node* prev=nullptr; Node* cur=evenHead;
    while(cur){ Node* nxt=cur->next; cur->next=prev; prev=cur; cur=nxt; }
    Node* tail=head;
    while(tail->next) tail=tail->next;
    tail->next=prev;
}
int main(){
    int a[]={10,4,9,1,3,5,9,4};
    Node* h=build(a,8);
    transform(h);
    print(h);
    return 0;
}
