#include <iostream>
using namespace std;
struct Node{int v; Node* next; Node(int x):v(x),next(nullptr){}};
Node* build(int a[], int n){Node* h=nullptr; Node* t=nullptr; for(int i=0;i<n;i++){Node* p=new Node(a[i]); if(!h) h=t=p; else {t->next=p; t=p;}} return h;}
void printList(Node* h){Node* p=h; while(p){cout<<p->v; if(p->next) cout<<" "; p=p->next;} cout<<"\n";}
Node* segregateEvenOdd(Node* head){
    if(!head) return head;
    Node *evenStart=nullptr,*evenEnd=nullptr,*oddStart=nullptr,*oddEnd=nullptr;
    Node* cur=head;
    while(cur){
        int x=cur->v;
        if(x%2==0){
            if(!evenStart){ evenStart=evenEnd=cur; }
            else { evenEnd->next=cur; evenEnd=evenEnd->next; }
        } else {
            if(!oddStart){ oddStart=oddEnd=cur; }
            else { oddEnd->next=cur; oddEnd=oddEnd->next; }
        }
        cur=cur->next;
    }
    if(!evenStart){ if(oddEnd) oddEnd->next=nullptr; return oddStart; }
    if(!oddStart){ evenEnd->next=nullptr; return evenStart; }
    evenEnd->next=oddStart;
    oddEnd->next=nullptr;
    return evenStart;
}
int main(){
    int arr1[]={17,15,8,12,10,5,4,1,7,6};
    Node* h1=build(arr1,10);
    h1=segregateEvenOdd(h1);
    printList(h1);
    int arr2[]={8,12,10,5,4,1,6};
    Node* h2=build(arr2,7);
    h2=segregateEvenOdd(h2);
    printList(h2);
    int arr3[]={8,12,10};
    Node* h3=build(arr3,3);
    h3=segregateEvenOdd(h3);
    printList(h3);
    int arr4[]={1,3,5,7};
    Node* h4=build(arr4,4);
    h4=segregateEvenOdd(h4);
    printList(h4);
    return 0;
}
